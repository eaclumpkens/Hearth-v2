{"ast":null,"code":"import React from'react';import\"./GoogleLogin.css\";import API from\"../../../utils/API\";import{GoogleLogin}from'react-google-login';// refresh token\nimport{refreshTokenSetup}from'../../../utils/refreshToken';import{jsx as _jsx}from\"react/jsx-runtime\";var clientId=\"702121191168-sbq7ipqbrji9t75h21spb87lkhnlh5g8.apps.googleusercontent.com\";function Login(){var onSuccess=function onSuccess(res){console.log('Login Success: currentUser:',res.profileObj);// alert(\n//   `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\n// );\nrefreshTokenSetup(res);var newUser={name:res.profileObj.name,image:res.profileObj.imageUrl,_id:res.profileObj.googleId};var myUserEntity={};myUserEntity.Id=res.profileObj.googleId;myUserEntity.Name=res.profileObj.name;myUserEntity.Image=res.profileObj.imageUrl;//Store the entity object in sessionStorage where it will be accessible from all pages of your site.\nsessionStorage.setItem('myUserEntity',JSON.stringify(myUserEntity));// API.saveUser(newUser)\n//   .then((res) => {\n//     console.log(res)\n//     console.log(\"user saved\")\n//   }).catch(err => err)\nwindow.location.replace(\"http://localhost:3000/dashboard\");};var onFailure=function onFailure(res){console.log('Login failed: res:',res);};//   const responseGoogle = (response) => {\n//     console.log(response);\n//   }\n// ^^to look at full google signin object^^\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(GoogleLogin,{clientId:clientId,buttonText:\"Login\",onSuccess:onSuccess,onFailure:onFailure,cookiePolicy:'single_host_origin',isSignedIn:true,render:function render(renderProps){return/*#__PURE__*/_jsx(\"button\",{id:\"google-auth\",className:\"google-login\",onClick:renderProps.onClick,disabled:renderProps.disabled,children:\"Login with Google\"});}})});}export default Login;","map":{"version":3,"sources":["/Users/eaclumpkens/Documents/Dev/Bootcamp/inclass/Projects/Hearth-v2/client/src/components/GoogleAuth/GoogleLogin/GoogleLogin.js"],"names":["React","API","GoogleLogin","refreshTokenSetup","clientId","Login","onSuccess","res","console","log","profileObj","newUser","name","image","imageUrl","_id","googleId","myUserEntity","Id","Name","Image","sessionStorage","setItem","JSON","stringify","window","location","replace","onFailure","renderProps","onClick","disabled"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,oBAAhB,CACA,OAASC,WAAT,KAA4B,oBAA5B,CACA;AACA,OAASC,iBAAT,KAAkC,6BAAlC,C,2CAEA,GAAMC,CAAAA,QAAQ,CACZ,0EADF,CAGA,QAASC,CAAAA,KAAT,EAAiB,CACf,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,CAAS,CACzBC,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAA2CF,GAAG,CAACG,UAA/C,EACA;AACA;AACA;AACAP,iBAAiB,CAACI,GAAD,CAAjB,CAEA,GAAMI,CAAAA,OAAO,CAAG,CACdC,IAAI,CAAEL,GAAG,CAACG,UAAJ,CAAeE,IADP,CAEdC,KAAK,CAAEN,GAAG,CAACG,UAAJ,CAAeI,QAFR,CAGdC,GAAG,CAAER,GAAG,CAACG,UAAJ,CAAeM,QAHN,CAAhB,CAKA,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CACEA,YAAY,CAACC,EAAb,CAAkBX,GAAG,CAACG,UAAJ,CAAeM,QAAjC,CACAC,YAAY,CAACE,IAAb,CAAoBZ,GAAG,CAACG,UAAJ,CAAeE,IAAnC,CACAK,YAAY,CAACG,KAAb,CAAqBb,GAAG,CAACG,UAAJ,CAAeI,QAApC,CAEJ;AACEO,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAsCC,IAAI,CAACC,SAAL,CAAeP,YAAf,CAAtC,EAEA;AACA;AACA;AACA;AACA;AACAQ,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,iCAAxB,EAED,CA3BD,CA8BA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACrB,GAAD,CAAS,CACzBC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCF,GAAlC,EACD,CAFD,CAIF;AACA;AACA;AACA;AAEE,mBACE,kCACE,KAAC,WAAD,EACE,QAAQ,CAAEH,QADZ,CAEE,UAAU,CAAC,OAFb,CAGE,SAAS,CAAEE,SAHb,CAIE,SAAS,CAAEsB,SAJb,CAKE,YAAY,CAAE,oBALhB,CAME,UAAU,CAAE,IANd,CAOE,MAAM,CAAE,gBAAAC,WAAW,qBACjB,eACE,EAAE,CAAC,aADL,CAEE,SAAS,CAAC,cAFZ,CAGE,OAAO,CAAEA,WAAW,CAACC,OAHvB,CAIE,QAAQ,CAAED,WAAW,CAACE,QAJxB,+BADiB,EAPrB,EADF,EADF,CAqBD,CAED,cAAe1B,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport \"./GoogleLogin.css\";\nimport API from \"../../../utils/API\";\nimport { GoogleLogin } from 'react-google-login';\n// refresh token\nimport { refreshTokenSetup } from '../../../utils/refreshToken';\n\nconst clientId =\n  \"702121191168-sbq7ipqbrji9t75h21spb87lkhnlh5g8.apps.googleusercontent.com\";\n\nfunction Login() {\n  const onSuccess = (res) => {\n    console.log('Login Success: currentUser:', res.profileObj);\n    // alert(\n    //   `Logged in successfully welcome ${res.profileObj.name} 😍. \\n See console for full profile object.`\n    // );\n    refreshTokenSetup(res);\n\n    const newUser = {\n      name: res.profileObj.name,\n      image: res.profileObj.imageUrl,\n      _id: res.profileObj.googleId\n    };\n    var myUserEntity = {};\n      myUserEntity.Id = res.profileObj.googleId;\n      myUserEntity.Name = res.profileObj.name;\n      myUserEntity.Image = res.profileObj.imageUrl;\n  \n  //Store the entity object in sessionStorage where it will be accessible from all pages of your site.\n    sessionStorage.setItem('myUserEntity',JSON.stringify(myUserEntity));\n\n    // API.saveUser(newUser)\n    //   .then((res) => {\n    //     console.log(res)\n    //     console.log(\"user saved\")\n    //   }).catch(err => err)\n    window.location.replace(\"http://localhost:3000/dashboard\");\n\n  };\n  \n\n  const onFailure = (res) => {\n    console.log('Login failed: res:', res);\n  };\n\n//   const responseGoogle = (response) => {\n//     console.log(response);\n//   }\n// ^^to look at full google signin object^^\n\n  return (\n    <div>\n      <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={'single_host_origin'}\n        isSignedIn={true}\n        render={renderProps => (\n          <button  \n            id=\"google-auth\"\n            className=\"google-login\"\n            onClick={renderProps.onClick} \n            disabled={renderProps.disabled}>\n              Login with Google\n          </button>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}